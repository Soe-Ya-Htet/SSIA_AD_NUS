@using SSISTeam9.Models
@{
    ViewBag.Title = "ViewRetrievalForm";
}

@{ 
    var retForms = (List<RetrievalForm>)ViewData["retrievalForms"];
    

}


    <table>
        <tr>
            <th rowspan="2">Bin #</th>
            <th rowspan="2">Stationary Description</th>
            <th colspan="2">Total Quantity</th>
            <th colspan="2">BreakDown By Department</th>


        </tr>
        <tr>
            <th>Needed</th>
            <th>Retrieved</th>
            <th>Dept Name</th>
            <th>Needed</th>
            <th>Actual</th>
        </tr>
        @foreach (var retForm in retForms)
        {
            <tr>
                <td rowspan="@retForm.deptNeeds.Count">@retForm.binNo</td>
                <td rowspan="@retForm.deptNeeds.Count">@retForm.description</td>
                <td rowspan="@retForm.deptNeeds.Count">@retForm.totalNeeded</td>
                <td rowspan="@retForm.deptNeeds.Count" id="/@retForm.itemId">@retForm.itemId</td>
                <td>@retForm.deptNeeds[0].deptCode</td>
                <td>@retForm.deptNeeds[0].deptNeeded</td>
                <td><input type="number"  class="@retForm.itemId" name="@retForm.deptNeeds[0].deptId" value="@retForm.deptNeeds[0].deptNeeded" onchange="findTotal(@retForm.itemId)" min="0" /></td>
            </tr>
            for (int i = 1; i < retForm.deptNeeds.Count; i++)
            {
                <tr>
                    <td>@retForm.deptNeeds[i].deptCode</td>
                    <td>@retForm.deptNeeds[i].deptNeeded</td>
                    <td><input type="number" class="@retForm.itemId" name="@retForm.deptNeeds[i].deptId" value="@retForm.deptNeeds[i].deptNeeded" onchange="findTotal(@retForm.itemId)" min="0" /></td>
                </tr>
            }

        }
    </table>
    <input type="button"  value="Submit" onclick="submitData()" />


<script type="text/javascript">
    var jsRetForms = @Html.Raw(Json.Encode(ViewData["retrievalForms"]));

    function findAllTotal() {
        for (var retForm of jsRetForms) {

            findTotal(retForm["itemId"]);
        }
    }

    function findTotal(id) {
        var arr = document.getElementsByClassName(id);
        var tot = 0;
        for (var i = 0; i < arr.length; i++) {
            if (parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById("/" + id).innerHTML = tot;
    }

    window.onload = findAllTotal();

    function submitData() {
        var deptCodes = new Array();
        for (var retForm of jsRetForms) {
            for (retF of retForm["deptNeeds"]) {
                if (deptCodes.includes(retF["deptId"])) {

                }
                else {
                    deptCodes.push(retF["deptId"])
                }
            }

        }//this returns arrays deptCodes

        var listOfLists = new Array();
        for (var i = 0; i < deptCodes.length; i++) {
            var listPerDeptCode = document.getElementsByName(deptCodes[i])
            for (var item of listPerDeptCode) {
                var list = { deptId: deptCodes[i], itemId: item.className, quantity: item.value }
                listOfLists.push(list)
            }
        }

        //var dataToPost = JSON.stringify({ methodParam: listOfLists });

        $.ajax({
            type: 'POST',
            url: "@Url.Action("CreateDisbursementLists", "Disbursement")",
            contentType: 'application/json; charset=utf-8', // specify the content type
            dataType: 'JSON', // make sure you use the correct case for dataType
            data: JSON.stringify(listOfLists),
            success: function (data) {
                window.location.href = data;
            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });
    }
</script>