@model SSISTeam9.Models.Supplier

@using SSISTeam9.Models;
@{
    Layout = "~/Views/Shared/_Store.cshtml";
    ViewBag.Title = "Update Supplier Details";
    Supplier supplier = (Supplier)ViewData["supplier"];

    string sessionId = (string)ViewData["sessionId"];
}

<h3>Update Supplier Details</h3>

<div>
    @using (Html.BeginForm("Update", "Supplier", routeValues: new { sessionid = sessionId }, method: FormMethod.Post))
    {
        <table class="table table-bordered">
            <tr>
                <td>@Html.LabelFor(m => m.SupplierCode) </td>
                <td>
                    @Html.TextBoxFor(m => m.SupplierCode, new { id = "supplierCode", @Value = supplier.SupplierCode })
                    @Html.ValidationMessageFor(m => m.SupplierCode, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Name) </td>
                <td>
                    @Html.TextBoxFor(m => m.Name, new { id = "supplierName", @Value = supplier.Name })
                    @Html.ValidationMessageFor(m => m.Name, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.GstNumber) </td>
                <td>
                    @Html.TextBoxFor(m => m.GstNumber, new { id = "gstNumber", @Value = supplier.GstNumber })
                    @Html.ValidationMessageFor(m => m.GstNumber, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Address) </td>
                <td>
                    @Html.TextBoxFor(m => m.Address, new { id = "address", @Value = supplier.Address })
                    @Html.ValidationMessageFor(m => m.Address, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContactName) </td>
                <td>
                    @Html.TextBoxFor(m => m.ContactName, new { id = "contactName", @Value = supplier.ContactName })
                    @Html.ValidationMessageFor(m => m.ContactName, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.PhoneNumber) </td>
                <td>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { id = "phoneNumber", @Value = supplier.PhoneNumber })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.FaxNumber) </td>
                <td>
                    @Html.TextBoxFor(m => m.FaxNumber, new { id = "faxNumber", @Value = supplier.FaxNumber })
                    @Html.ValidationMessageFor(m => m.FaxNumber, "", new { style = "color:red" })
                </td>
            </tr>
            <tr>
                <td>
                    <button class="btn btn-danger">
                        @Html.ActionLink("Delete Supplier","Delete","Supplier",
                        new { confirm = true, supplierCode = supplier.SupplierCode, sessionid = sessionId },
                        new { onclick = "return confirm('Do you really want to delete this supplier?')"})
                    </button>
                    <!-- <input type="button" value="Delete Supplier" onclick="location.href='/Supplier/Delete?supplierCode=@supplier.SupplierCode'">-->
                </td>
                <td align="right"><input type="submit" value="Save Update(s)" class="btn btn-success rounded"></td>
                @Html.Hidden("supplierId", supplier.SupplierId)
            </tr>
        </table>
    }
</div>

@Html.Raw(TempData["errorMsg"])

<style>
    td {
        padding: 2px;
    }

    tr {
        height: 40px;
        padding: 2px;
    }
</style>