@model SSISTeam9.Models.PurchaseOrder

@using SSISTeam9.Models;
@{
    Layout = "~/Views/Shared/_Store.cshtml";
    ViewBag.Title = "Update Purchase Order";
    PurchaseOrder order = (PurchaseOrder)ViewData["order"];
    var counter = 0;
    double total = 0;

    string sessionId = (string)ViewData["sessionId"];
}

<h3>Update Purchase Order</h3>

<div>
    @using (Html.BeginForm("UpdatePurchaseOrder", "PurchaseOrder", routeValues: new { sessionid = sessionId }
    , method: FormMethod.Post))
    {
        <table class="table table-bordered">
            <tr>
                <td colspan="2">PO Number: </td>
                <td colspan="2">@order.OrderNumber</td>
            </tr>
            <tr>
                <td colspan="2">Supplier Name: </td>
                <td colspan="2">@order.Supplier.Name</td>
            </tr>
            <tr>
                <td colspan="2">Deliver To: </td>
                <td colspan="2"><input type="text" name="deliverTo" value="@order.DeliverTo" style="height:100px; width:350px"></td>
            </tr>
            <tr>
                <td colspan="2">To Supply Items By: </td>
                <td colspan="2"><input type="date" name="deliverBy" value="@order.DeliverBy.Date.ToString("yyyy-MM-dd")"></td>
            </tr>
        </table>

        <table class="table table-bordered">
            <tr>
                <th>Check Item To Update</th>
                <th>Item Number</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Unit Price ($)</th>
                <th>Total ($)</th>
            </tr>

            @foreach (var item in order.ItemDetails)
            {
                <tr>
                    @Html.HiddenFor(m => m.OrderNumber, new { id = "orderNumber" })
                    @Html.HiddenFor(m => m.ItemDetails[counter].Item.ItemId, new { @Value = order.ItemDetails[counter].Item.ItemId })
                    <td>@Html.CheckBoxFor(m => m.ItemDetails[counter].Item.IsChecked, new { id = "selectedChangeSupplier" })</td>
                    <td>@item.Item.ItemCode</td>
                    <td>@item.Item.Description</td>
                    <td>@item.Quantity</td>

                    <!--To check what is the supplier for the current Purchase Order-->
                    @if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier1Id)
                    {
                        <td>@item.Item.ItemSuppliersDetails.Supplier1UnitPrice</td>
                    }
                    else if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier2Id)
                    {
                        <td>@item.Item.ItemSuppliersDetails.Supplier2UnitPrice</td>
                    }
                    else if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier3Id)
                    {
                        <td>@item.Item.ItemSuppliersDetails.Supplier3UnitPrice</td>
                    }

                    @if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier1Id)
                    {
                        <td>@(item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier1UnitPrice))</td>
                        total = total + item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier1UnitPrice);
                    }
                    else if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier2Id)
                    {
                        <td>@(item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier2UnitPrice))</td>
                        total = total + item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier2UnitPrice);
                    }
                    else if (order.SupplierId == item.Item.ItemSuppliersDetails.Supplier3Id)
                    {
                        <td>@(item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier3UnitPrice))</td>
                        total = total + item.Quantity * Convert.ToDouble(item.Item.ItemSuppliersDetails.Supplier3UnitPrice);
                    }
                </tr>
                counter = counter + 1;
            }
            <tr style="height:100px">
                <td colspan="5" align="right"><b>Total: </b></td>
                <td colspan="1">@total.ToString("C2")</td>
            </tr>
        </table>
        <input type="submit" value="Update" style="float:right"/>
        <br /><br />
        <button class="rounded" style="float:right">
            @Html.ActionLink("Confirm Order", "ConfirmOrder", "PurchaseOrder",
            new { confirm = true, ordernumber = order.OrderNumber, sessionId = sessionId },
            new { onclick = "return confirm('Confirmed?')" })
        </button>
        <br /><br />
        <button class="rounded" style="float:right">
            @Html.ActionLink("Delete PO", "Delete", "PurchaseOrder",
            new { confirm = true, ordernumber = order.OrderNumber, sessionId = sessionId },
            new { onclick = "return confirm('Do you really want to delete this purchase order?')" })
        </button>
    }
</div>

<style>
    td {
        padding: 2px;
        width: 200px;
    }

    tr {
        height: 40px;
        padding: 2px;
        text-align: center;
    }

    th {
        text-align: center;
    }
</style>

