@{
    Layout = "~/Views/Shared/_Store.cshtml";
    ViewBag.Title = "Orders By Stationery Category";
    int month = (int)ViewData["month"];
    int year = (int)ViewData["year"];
    List<string> monthsToDisplay = (List<string>)ViewData["monthsToDisplay"];
    Dictionary<string, int> monthsInInt = (Dictionary<string, int>)ViewData["monthsInInt"];

    Dictionary<string, double> dataForDisplay = (Dictionary<string, double>)ViewData["dataForDisplay"];
    string title = (string)ViewData["chartTitle"];

    string sessionId = (string)ViewData["sessionId"];
}
<!DOCTYPE html>

<h2>Orders By Stationery Category</h2>
<html>

<head>
    <script src="~/Scripts/Chart.min.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel=" = stylesheet" />
</head>
<body>
    <div>
        <p>Default shows total amount ordered by stationery category for current month (base).</p>
        <p>Change base month using dropdown below.</p>
        @using (Html.BeginForm("ByStationeryCategoryOrderedForSelectedMonth", "Analytics", new { sessionid = sessionId }, method: FormMethod.Post))
        {
            <p>Year: @year</p>
            <label for="month">Month: </label>
            <select id="month" name="month">
                @foreach (var m in monthsToDisplay)
                {
                    if (month == monthsInInt[m])
                    {
                        <option value="@m" selected>@m</option>
                    }
                    else
                    {
                        <option value="@m">@m</option>
                    }
                }
            </select>
            <input type="hidden" name="year" value='@year' />
            <input type="hidden" name="sessionId" value="@sessionId" />
            <input class="rounded" type="submit" value="Generate" />
        }

    </div>
    <div class="chart-container">
        <canvas id="barChart" width="800" height="450"></canvas>
    </div>
</body>

</html>

<script>
    let myChart = $("#barChart");
    let categories = @Html.Raw(Json.Encode(dataForDisplay.Keys));
    let amounts = @Html.Raw(Json.Encode(dataForDisplay.Values));
    let displayTitle = @Html.Raw(Json.Encode(title));

    let reqChart = new Chart(myChart, {
        type: 'bar',
        data: {
            labels: categories,
            datasets: [{
                label: "Total Amount ($)",
                data: amounts
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: displayTitle
            },
            scales: {
                yAxes: [{ id: 'y-axis-1', type: 'linear', position: 'left', ticks: { min: 0 } }],
                xAxes: [{maxBarThickness: 100}]
            }
        }
    });
</script>
