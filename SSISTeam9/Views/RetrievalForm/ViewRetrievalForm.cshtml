@using SSISTeam9.Models
@{
    Layout = "~/Views/Shared/_Store.cshtml";
    ViewBag.Title = "ViewRetrievalForm";
}

@{
    var retForms = (List<RetrievalForm>)ViewData["retrievalForms"];
    var alrAssigned = (string)ViewData["alreadyAssigned"];
    var sessionId = (string)ViewData["sessionId"];
    var stockLevel = (List<int>)ViewData["stockLevel"];

}

<h2>Retrieval Form</h2>
@if (retForms.Count != 0 && alrAssigned == "NO")
{
<table class="table table-bordered">
    <tr>
        <th rowspan="2">Bin #</th>
        <th rowspan="2">Stationary Description</th>
        <th colspan="2">Total Quantity</th>
        <th colspan="3">BreakDown By Department</th>


    </tr>
    <tr>
        <th>Needed</th>
        <th>Retrieved</th>
        <th>Dept Name</th>
        <th>Needed</th>
        <th>Actual</th>
    </tr>
    @for (int i = 0; i < retForms.Count; i++)
    {
        <tr>
            <td rowspan="@retForms[i].deptNeeds.Count">@retForms[i].binNo</td>
            <td rowspan="@retForms[i].deptNeeds.Count">@retForms[i].description</td>
            <td rowspan="@retForms[i].deptNeeds.Count">@retForms[i].totalNeeded</td>
            <td rowspan="@retForms[i].deptNeeds.Count" id="/@retForms[i].itemId">@retForms[i].itemId</td>
            <td>@retForms[i].deptNeeds[0].deptCode</td>
            <td>@retForms[i].deptNeeds[0].deptNeeded</td>
            
            @if (stockLevel[i] >= retForms[i].deptNeeds[0].deptNeeded)
            {
                <td><input type="number" class="@retForms[i].itemId" name="@retForms[i].deptNeeds[0].deptId" value="@retForms[i].deptNeeds[0].deptNeeded" onchange="findTotal(@retForms[i].itemId)" min="0" /></td>
                stockLevel[i] -= retForms[i].deptNeeds[0].deptNeeded;
            }
            else
            {
                <td><input type="number" class="@retForms[i].itemId" name="@retForms[i].deptNeeds[0].deptId" value="@stockLevel[i]" onchange="findTotal(@retForms[i].itemId)" min="0" /></td>
                stockLevel[i] = 0;
            }

        </tr>
        if (retForms[i].deptNeeds.Count > 1)
        {
            for (int x = 1; x < retForms[i].deptNeeds.Count; x++)
            {
                <tr>
                    <td>@retForms[i].deptNeeds[x].deptCode</td>
                    <td>@retForms[i].deptNeeds[x].deptNeeded</td>

                    @if (stockLevel[i] >= retForms[i].deptNeeds[x].deptNeeded)
                    {
                        <td><input type="number" class="@retForms[i].itemId" name="@retForms[i].deptNeeds[x].deptId" value="@retForms[i].deptNeeds[x].deptNeeded" onchange="findTotal(@retForms[i].itemId)" min="0" /></td>
                        stockLevel[i] -= retForms[i].deptNeeds[x].deptNeeded;
                    }
                    else
                    {
                        <td><input type="number" class="@retForms[i].itemId" name="@retForms[i].deptNeeds[x].deptId" value="@stockLevel[i]" onchange="findTotal(@retForms[i].itemId)" min="0" /></td>
                        stockLevel[i] = 0;
                    }

                    
                </tr>
            }

        }
    }

</table>
    <div class="row justify-content-end">
        <input type="date" name="date" id="collectionDate" value="@DateTime.Now.AddDays(7).ToString("yyyy-MM-dd")" />
        <input class="btn-success rounded" type="button" value="Submit" onclick="submitData()" />
    </div>
    
}
else if(retForms.Count != 0 && alrAssigned == "YES")
{
    <div style="text-align:center">Items already retrieved</div>
}
else
{
    <div style="text-align:center">No items to retrieve</div>
}



<script type="text/javascript">
    var jsRetForms = @Html.Raw(Json.Encode(ViewData["retrievalForms"]));

    function findAllTotal() {
        for (var retForm of jsRetForms) {

            findTotal(retForm["itemId"]);
        }
    }

    function findTotal(id) {
        var arr = document.getElementsByClassName(id);
        var tot = 0;
        for (var i = 0; i < arr.length; i++) {
            if (parseInt(arr[i].value))
                tot += parseInt(arr[i].value);
        }
        document.getElementById("/" + id).innerHTML = tot;
    }

    window.onload = findAllTotal();

    function submitData() {
        var deptCodes = new Array();
        for (var retForm of jsRetForms) {
            for (retF of retForm["deptNeeds"]) {
                if (deptCodes.includes(retF["deptId"])) {

                }
                else {
                    deptCodes.push(retF["deptId"])
                }
            }

        }//this returns arrays deptCodes

        var collectionDate = document.getElementById("collectionDate").value
        var listOfLists = new Array();
        for (var i = 0; i < deptCodes.length; i++) {
            var listPerDeptCode = document.getElementsByName(deptCodes[i])
            for (var item of listPerDeptCode) {
                var list = { deptId: deptCodes[i], itemId: item.className, quantity: item.value, collectionDate: collectionDate }
                listOfLists.push(list)
            }
        }


        $.ajax({
            type: 'POST',
            url: "@Url.Action("CreateDisbursementLists", "Disbursement", new { sessionId = sessionId })",
            contentType: 'application/json; charset=utf-8', // specify the content type
            dataType: 'JSON', // make sure you use the correct case for dataType
            data: JSON.stringify(listOfLists),
            success: function (data) {
                window.location.href = data;
            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });
    }
</script>