@model SSISTeam9.Models.Delegate
@using SSISTeam9.Models
@{
    var employees = (List<Employee>)ViewData["employees"];
    var sessionId = (string)ViewData["sessionId"];
    var filtered = new List<Employee>();
    foreach(var emp in employees)
    {
        if(emp.EmpRole!="REPRESENTATIVE")
        {
            filtered.Add(emp);
        }
    }
}

<h2>ViewDelegate</h2>
@using (Html.BeginForm("ViewDelegate", "Delegate", FormMethod.Post,new { sessionId=sessionId}))
{
    @Html.ValidationSummary(true)
    <input type="hidden" name="sessionId" value="@sessionId" />
<table class="table table-bordered">
    <tr>
        <td>@Html.LabelFor(x => x.FromDate) </td>
        <td>@Html.TextBoxFor(x => x.FromDate, new { type = "date" })</td>
        <td>@Html.ValidationMessageFor(x=>x.FromDate)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.ToDate) </td>
        <td>@Html.TextBoxFor(x => x.ToDate, new { type = "date"})</td>
        <td>@Html.ValidationMessageFor(x=>x.ToDate)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(x => x.Employee) </td>
        <td>
            <div>
                @Html.DropDownListFor(x => x.Employee.EmpId, filtered.Select(e => new SelectListItem { Text=e.EmpName, Value=e.EmpId.ToString()}))
            </div>
        </td>
        <td>
            <input class="rounded" type="submit" value="Delegate"/>
        </td>
    </tr>
</table>
}
<script>
    function checkDate() {
        var from = document.getElementById("FromDate").value;
        var to = document.getElementById("ToDate").value;
        if (Date.parse(from) >= Date.parse(to)) {
            alert("To Date must be greater than From Date")
            document.getElementById("ToDate").value = "";
        }
    }
    document.getElementById("ToDate").addEventListener("change", function (e) {
        e.preventDefault();
        checkDate();
    });
</script>



