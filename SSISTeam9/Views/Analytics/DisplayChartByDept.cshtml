@{
    ViewBag.Title = "Requests By Department";
    int month = (int)ViewData["month"];
    int year = (int)ViewData["year"];
    string department = (string)ViewData["department"];

    List<string> monthsToDisplay = (List<string>)ViewData["monthsToDisplay"];
    Dictionary<string, int> monthsInInt = (Dictionary<string, int>)ViewData["monthsInInt"];
    Dictionary<string, int> monthsAndQuantitiesForChart = (Dictionary<string, int>)ViewData["monthsAndQuantitiesForChart"];

    var title = "Total Quantity Requested By " + department;

    string sessionId = (string)ViewData["sessionId"];
}
<!DOCTYPE html>

<h2>Requests by @department</h2>
<html>

<head>
    <script src="~/Scripts/Chart.min.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel=" = stylesheet" />
</head>
<body>
    <div>
        <p>Default shows line chart for current month (base) and preceding two months.</p>
        <p>Change base month using dropdown below.</p>
        @using (Html.BeginForm("DisplayChartByDept", "Analytics", new { sessionid = sessionId }, method: FormMethod.Post))
        {
            <label for="month">Month: </label>
            <select id="month" name="month">
                @foreach (var m in monthsToDisplay)
                {
                    if (month == monthsInInt[m])
                    {
                        <option value="@m" selected>@m</option>
                    }
                    else
                    {
                        <option value="@m">@m</option>
                    }
                }
            </select>
            <input type="hidden" name="year" value='@year' />
            <input type="hidden" name="department" id="department" value="@department" />
            <input type="hidden" name="sessionId" value="@sessionId" />
            <input type="submit" value="Generate" />
        }

    </div>
    <div class="chart-container">
        <canvas id="lineChart"></canvas>
    </div>
</body>

</html>

<script>
    let myChart = $("#lineChart");
    let months = @Html.Raw(Json.Encode(monthsAndQuantitiesForChart.Keys));
    let quantities = @Html.Raw(Json.Encode(monthsAndQuantitiesForChart.Values));
    let displayTitle = @Html.Raw(Json.Encode(title));

    let reqChart = new Chart(myChart, {
        type: 'line',
        markerType: "cross",
        data: {
            labels: months,
            datasets: [{
                label: 'Number of units',
                fill: false,
                lineTension: 0.1,
                backgroundColor:"rgba(75,192,192,0.4)",
                borderColor:"rgba(75,192,192,1)",
                borderCapStyle: 'butt', 
                borderDash: [],
                borderDashOffset: 0.0,
                bordenJoinStyle: 'miter',
                pointBorderColor: "rgba(75,192,192,1)",
                pointBackgroundColor: "#fff",
                pointBorderWidth: 1,
                pointHoverRadius: 5,
                pointHoverBackgroundColor: "rgba(75,192,192,1)",
                pointHoverBorderColor: "rgba(220,220,220,1)",
                pointHoverBorderWidth: 2,
                pointRadius: 1,
                pointHitRadius: 10,
                data: quantities
            }]
        },
        options: {
            legend: { display: false },
            steppedLine: false,
            title: {
                display: true,
                text: displayTitle 
            },
            scales: {
                yAxes: [{ id: 'y-axis-1', type: 'linear', position: 'left', ticks: { min: 0 } }]
            }
        }
    });
</script>
